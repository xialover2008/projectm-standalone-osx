#define  M_PI   3.14159265359
#define  M_PI_2 6.28318530718
#define  M_INV_PI_2  0.159154943091895

#define lum(x) (dot(x,float3(0.32,0.49,0.29)))
#define tex2d tex2D
#define tex3d tex3D


#define getrad sqrt((uv.x-0.5)*2*(uv.x-0.5)*2+(uv.y-0.5)*2*(uv.y-0.5)*2)*.7071067
#define getang atan2(((uv.y-0.5)*2),((uv.x-0.5)*2))

#define GetBlur2 GetBlur1
#define GetBlur3 GetBlur1

#define GetMain(uv) (tex2D(sampler_main,uv).xyz)
#define GetPixel(uv) (tex2D(sampler_main,uv).xyz)

#define uv_orig uv

uniform sampler2D sampler_main;
uniform sampler2D sampler_noise_lq;
             uniform sampler2D sampler_noise_lq_lite;
             uniform sampler2D sampler_noise_mq;
             uniform sampler2D sampler_noise_hq;
             uniform sampler3D sampler_noisevol_lq;
             uniform sampler3D sampler_noisevol_hq;
             uniform float4 texsize_noise_lq;
             uniform float4 texsize_noise_lq_lite;
             float time;
             float4 rand_preset;
             float4 rand_frame;
             float  progress;
             float  frame;
             float  fps;
             float  bass;
             float  mid;
             float  treb;
             float  vol;
             float  bass_att;
             float  mid_att;
             float  treb_att;
             float  vol_att;
             float4 texsize;
             float4 aspect;

#define sampler_pw_main sampler_main
#define sampler_pc_main sampler_main
#define sampler_fw_main sampler_main
#define sampler_fc_main sampler_main

#define texsize_noise_mq texsize_noise_lq
#define texsize_noise_hq texsize_noise_lq
#define texsize_noisevol_lq texsize_noise_lq_lite
#define texsize_noisevol_hq texsize_noise_lq_lite


struct outtype {float4 color : COLOR;};


//float3 lum(float3 a){return dot(a, float3(0.32,0.49,0.29));}

float3 GetBlur1(float2 uv)
{
float3 ret = tex2D(sampler_main, uv).xyz;
ret += tex2D(sampler_main, float2(uv.x-.001, uv.y)).xyz;
ret += tex2D(sampler_main, float2(uv.x+.001, uv.y)).xyz;
ret += tex2D(sampler_main, float2(uv.x, uv.y + .001)).xyz;
ret += tex2D(sampler_main, float2(uv.x, uv.y - .001)).xyz;

return ret * 0.2;
}

outtype OUT;
float3 ret;
